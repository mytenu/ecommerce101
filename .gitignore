# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore 
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer, 
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Cursor
#  Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#  exclude from AI features like autocomplete and code analysis. Recommended for sensitive data
#  refer to https://docs.cursor.com/context/ignore-files
.cursorignore
.cursorindexingignore

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/
# Google Cloud credentials
{
  "type": "service_account",
  "project_id": "radiant-oven-468510-f2",
  "private_key_id": "f3b0e6b55d77c1c6291a46c0cafc1393cf20751a",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC1BYJzLBZ+UJU/\nESXLqKtv22rf0tqoht9tFykzRjzcJLF6u0uVZNSLN7vlz8ZLaLA98S3STC23ie2R\n+6/WcvHqDF3+Al1lsLJkD7QT6NgB1POPW2eepVHl4tWvDqGociiorz5TXXnafMam\n2RzkavzULqzRzwPSscZudG3YLsrwm7EtVLYtY86eNuybS0AgM1E8EQ8oWuqbd1h7\nJsYjgk6+3b0fcu0+cTjE1ljWsPk1WL0MBui3UGi8xxV18IpMvtsOf3zcfTiUc7zy\nz4WdubI1G6xrkeiCXrwW9c46gukMbZhEfSH/eWhBdIw8GQjAqCN6kIVutDwMmg+p\n6ArdNYIbAgMBAAECggEAUneqmM6WhsAuZfdpaREz3PcwhrxYChu7sMay6d2PP1lm\nE3w9MFeprqza6JTSCSut0uJLljlHQIzREsb/MerWw+ITdfNc2kV317cBumpC8f6y\nYPZqy+8T0u+WmrRHOGadmE+RzMfSihN7KqrRi0wkV4PWDpVJcBS2Sj63hhu3L4pv\nuqfop7HzVaiQOYf+X+xZ38clmdm47LXfGXKXV0Pdawun3OH06BDkC4b4ewC+GzGQ\nkXEQhTJSFeaq2egcbU1S/ole85KvgKEvra9b/f+OgEzrXcy3MElHnuNKN0F6F+WY\nCcGs/dkMCgxoOU/2mDjwSnhxKcsBoytDY0tCROiGMQKBgQD8WINfdo6YjY6ahF3G\nHRzwR2io4AvXkvm3W5gqZGarIo0HyRTU+M2canIFcu7yVwI4XgR3V98mQL9KolAM\nel1JHlIKpIDeXp0xflacJVizTg5wmwFkWKcdiCSJeMpmUWi4ISRhqb6ZFg3Z+5JL\nJ48VJNNK35tcwcGuory3CbeqcQKBgQC3pJX50Z5DIaYAlu6kvjdg/A6qtK1isZdr\nGiY4yFqHxlZnClciXj2a5oOE5wiWpvwbrZ9gC84pC/qMC27yMHYEcPPYA4oiAuaJ\nnNKnZKua+4yiWEmDHwRJpiLbXV+eDt2w+v50/wV0Rr7GITp1sSTz6fHceZUpi3H5\noAtYNvtDSwKBgQCYKU9eWwD1IDajGbnp4lg20vhbDG5XmTqWw9ZniY8XFohv72Ju\nYXCqJs2GV52Z57lg/+A1jnjyegxfFqyqOYbStkPGQxep/udOlt3m3eY0iJbQc8dN\nGN/8QMG3W2zAccpxbRqhAVf6u3+yt62pP7tZhpEaDueB8Ru3EE43GNb1IQKBgDDQ\nIr1AppyZeRJ3C//mP7obxZpCZEPziJgDX12Ag+/LHHRPH1IXUrC1zQeqkXHZ+PEy\neUaCXM40TOiksVzW3MfZbjdg2Xqo4rZ5ZNTxwVt0ubD9XqzntbAN5P4CF8RflzXP\nwYs/rid2Fod7lZpq97ON36gG+UsNscH0dI+CLc95AoGBANrOuUl8LUakGx7+vb33\nyY7O+exzCkr37/JKXCx6M10nPjInNpAsETw807YAimgEwzqDPicvDejE+y+1kMW9\nxE6R+uGehWOQpU4EQmiRem1aneEo/9YoH9jH6dkSpfTfA2ZmyqUcXcuQT0EZeypk\n0F8sJrzOv3VeaM8Ypwb3rGk+\n-----END PRIVATE KEY-----\n",
  "client_email": "araba-997@radiant-oven-468510-f2.iam.gserviceaccount.com",
  "client_id": "108680090741587464951",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/araba-997%40radiant-oven-468510-f2.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}
